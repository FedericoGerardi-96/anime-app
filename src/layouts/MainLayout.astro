---
import '@fontsource/ubuntu/400.css';
import '@fontsource/ubuntu/500.css';
import '@fontsource/ubuntu/700.css';
import '@/styles/global.css';

import { ClientRouter } from 'astro:transitions';
import { getLangFromUrl } from '@/i18n/utils';

import SidebarLayout from './SidebarLayout';
import Spinner from '@/components/shared/Spinner.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;

const lang = getLangFromUrl(Astro.url) as string;
---

<!doctype html>
<html lang={lang}>
  <head>
    <script is:inline>
      function setDarkMode(document) {
        const getThemePreference = () => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
          }
          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };

        const isDark = getThemePreference() === 'dark';
        document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

        if (typeof localStorage !== 'undefined') {
          const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
          });
          observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
        }
      }

      setDarkMode(document);

      document.addEventListener('astro:before-swap', (ev) => {
        setDarkMode(ev.newDocument);
      });

      document.addEventListener('astro:before-preparation', (ev) => {
        const changepagination = JSON.parse(window.localStorage.getItem('changePagination') ?? 'false');
        if (!changepagination) {
          const spinner = document.getElementById('spinner');
          const children = document.getElementById('children');
          children?.classList.add('hidden');
          spinner?.classList.add('flex');
          spinner?.classList.remove('hidden');
        }
      });
    </script>
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.avif' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <ClientRouter />
  </head>
  <body class='sans'>
    <SidebarLayout class:list={'!p-0'} client:only='react'>
      <div id='children'>
        <slot />
      </div>
      <div id='spinner' class='hidden w-[80vw] h-[80vh] items-center justify-center overflow-hidden'>
        <Spinner />
      </div>
    </SidebarLayout>
  </body>
</html>
